{"compress":true,"commitItems":[["d0e5f527-70c4-49be-bd6e-b7883b96d2eb",1555167566739,"---\nlayout: post\ntitle: 代码优化例子\nsubtitle: \ndate: 2019-04-01T00:00:00.000Z\nauthor: kmg\nheader-img: img/post-bg-os-metro.jpg\ncatalog: true\ntags:\n  - 代码优化\npin: true\n---\n> 史蒂夫.乔布斯说，”复杂的终极境界是简单“，同样的优雅的代码一定是精简明了，可读性好。\n\n## **使用LocalDate和LocalDateTime**\n\n LocalDate精确到日期，LocalDateTime精确到时分秒。 优化前14行代码 \n\n```\ntry{\n  SimpleDateFormat sdfDay = new SimpleDateFormat(\"yyyy-MM-dd\");\n  SimpleDateFormat sdfMins = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n  Date now = new Date();\n  String today = sdfDay.format(now);\n  String waterStart = today +\"03:00:00\";\n  String waterEnd = today + \" 04:00:00\";\n  Date waterStartTime = sdfMins.parse(waterStart);\n  Date waterEndTime = sdfMins.parse(waterEnd);\n  }catch (ParseException pe){\n   return XX;\n   }\n```\n\n优化后3行代码\n\n```Java\nLocalDateTime now = LocalDateTime.now();\nLocalDateTime waterStart = LocalDateTime.of(now.getYear(), now.getMonth(),now.getDayOfMonth(),3,0);\nLocalDateTime waterEndTime =LocalDateTime.of(now.getYear(), now.getMonth(),now.getDayOfMonth(),4,0);\n```\n\n## **字符串累加**\n\n 字符串只要不在for循环里累加，可以直接用+号，因为编译成字节码后会变成StringBuilder，如果在for循环里面用+号会生成多个StringBuilder，所以在for循环里累加最好在循环外创建StringBuilder。 优化前五行 \n\n```\nStringBuffer sblog = new StringBuffer();\nsblog.append(\"waterDriven|sellerId=\");\nsblog.append(request.getSellerTaobaoId());\nsblog.append(\"|result=\");\nsblog.append(isSuccess);\n```\n\n 优化后一行 \n\n```\nString sblog=\"waterDriven|sellerId=\"+request.getSellerTaobaoId()+\"|result=\"+isSuccess;\n```\n\n 以上场景用逗号和等号连接数据，使用GUAVA的Joiner更精简，可读性更好 \n\n```\nString sblog=Joiner.on(\"|\").withKeyValueSeparator(\"=\").join(ImmutableMap.of(\"sellerId\", request.getSellerTaobaoId(), \"result\", isSuccess))\n```\n\n## **减少不需要的判断**\n\n 优化前5行 \n\n```\nString requestId = null;\nif (null != request.getExtData()) {\n  requestId = request.getExtDataValue(REQUEST_ID_KEY);\n}\nreturn requestId;\n```\n\n优化后1行\n\n```Java\nreturn request.getExtDataValue(REQUEST_ID_KEY);\n```\n\n## **去掉else**\n\n 优化前5行 \n\n```Java\nif (null != result|| StringUtils.isNotBlank(no)) {\n  return no;\n} else {\n  throw new RuntimeException(\"XX\");\n}\n```\n\n 优化后4行 \n\n```\nif (null != result||StringUtils.isNotBlank(no)) {\n  return no;\n  }\n   throw new RuntimeException(\"XX\");\n```\n\n## **不要返回布尔**\n\n 优化前5行\n\n```\nif (\"true\".equalsIgnoreCase(value.toString())) {\n  invoke = true;\n  } else {\n    invoke = false;\n  }\n```\n\n 优化后一行 \n\n```\ninvoke = \"true\".equalsIgnoreCase(value.toString());\n```\n",[[1555167566745,[null,[[1,41,"null"],[-1,150,"\npin: true"]],[41,41],[150,150]]]],null,"kmg@DESKTOP-L4V0PJN"]]}